{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": "https:\/\/raw.githubusercontent.com\/gsrvtech\/gameserver-templates\/refs\/heads\/main\/steamcmd-games\/aboiticfactor\/egg-pelican-abiotic-factor.json"
    },
    "exported_at": "2025-03-25T16:09:35+00:00",
    "name": "Abiotic Factor",
    "author": "eggs@goover.dev",
    "uuid": "86aa18b2-65df-4a42-a572-980e6913de4b",
    "description": "Abiotic Factor is a survival crafting experience for 1-6 players set in the depths of an underground research facility. Caught between paranormal containment failure, a military crusade, and chaos from a dozen realms, the world\u2019s greatest minds must survive against the universe\u2019s biggest threats.",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/goover\/wine:stable": "ghcr.io\/goover\/wine:stable"
    },
    "file_denylist": [],
    "startup": "wine .\/AbioticFactor\/Binaries\/Win64\/AbioticFactorServer-Win64-Shipping.exe -log -useperfthreads -NoAsyncLoadingThread -MaxServerPlayers={{NUM_PLAYERS}} -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} -ServerPassword=\"{{SERVER_PASSWORD}}\" -SteamServerName=\"{{SERVER_NAME}}\" & AF_PID=$!; tail -c0 -F \/home\/container\/AbioticFactor\/Saved\/Logs\/AbioticFactor.log --pid=$AF_PID",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"LogInit: Display: Engine is initialized.\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# THIS EGG IS LICENCED UNDER AGPLv3\r\n#\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Aboitc Factor Installscript${NC}\"\r\necho -e \"${YELLOW}Egg by gOOvER (https:\/\/dicord.goover.dev) | Licence: AGPLv3${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n# Setup Envs\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## check is steamuser is set\r\nif [ \"${STEAM_USER}\" == \"\" ]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nfi\r\n\r\n## when steam_user is set, use DepotDownloader, if its anonymous, use steamcmd\r\nif [ \"${STEAM_USER}\" == \"anonymous\" ]; then\r\n    ## download and install steamcmd\r\n    cd \/tmp\r\n    mkdir -p \/mnt\/server\/steamcmd\r\n    curl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\n    tar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\n    mkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\n    cd \/mnt\/server\/steamcmd\r\n\r\n    ## install game using steamcmd\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}install game using steamcmd. please wait...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n    .\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) $( [[ \"${STEAM_SDK}\" == \"1\" ]] && printf %s '+app_update 1007' ) +app_update ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-beta ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-betapassword ${STEAM_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit\r\n    echo -e \"${GREEN}..done..${NC}\"\r\n\r\n    ## set up 32 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk32\r\n    cp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n    ## set up 64 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk64\r\n    cp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\nelse\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}download and install DepotDownloader. please wait...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    ## download DepotDownloader\r\n    cd $HOME\r\n    curl -sLOJ $(curl -s https:\/\/api.github.com\/repos\/SteamRE\/DepotDownloader\/releases\/latest | grep browser_download_url | cut -d\\\" -f4 | egrep linux-x64.zip)\r\n    unzip -o DepotDownloader-linux-x64.zip -d \/mnt\/server\r\n    chmod +x \/mnt\/server\/DepotDownloader\r\n    rm -f \/mnt\/server\/DepotDownloader-linux-x64.zip\r\n    echo -e \"${GREEN}..done..${NC}\"\r\n\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}Depotdonloader Version: ${. \/$HOME\/DepotDownloader --version}${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n    ## install game using DepotDownloader\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}downloading game using DepotDownloader. please wait...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n    .\/DepotDownloader -dir \/mnt\/server $( [[ -z ${STEAM_USER} ]] || printf %s \"-username ${STEAM_USER} -password ${STEAM_PASS} -remember-password\" ) $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '-os windows' ) -app ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-beta ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-betapassword ${STEAM_BETAPASS}\" ) -validate\r\n    echo -e \"${GREEN}..done..${NC}\"\r\n    mkdir -p \/mnt\/server\/.steam\/sdk64\r\n    .\/DepotDownloader -dir \/mnt\/server\/.steam\/sdk64 $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '-os windows' ) -app 1007\r\n    chmod +x $HOME\/*\r\nfi\r\n\r\n## add below your custom commands if needed\r\n\r\n#FILE=\"$HOME\/AbioticFactor\/Saved\/SaveGames\/Server\/Worlds\/Cascade\/SandboxSettings.ini\"\r\n#if [ -f \"$FILE\" ]; then\r\n#  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#  echo -e \"${GREEN} $FILE found.${NC}\"\r\n#  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#else  \r\n#  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#  echo -e \"${RED} $FILE not found. Downloading default...${NC}\"\r\n#  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#  cd $HOME\r\n#  mkdir -p $HOME\/AbioticFactor\/Saved\/SaveGames\/Server\/Worlds\/Cascade\r\n#  curl -sS -o $HOME\/AbioticFactor\/Saved\/SaveGames\/Server\/Worlds\/Cascade\/SandboxSettings.ini https:\/\/raw.githubusercontent.com\/DFJacob\/AbioticFactorDedicatedServer\/refs\/heads\/main\/SandboxSettings.ini\r\n#  echo -e \"${GREEN}..done..${NC}\"\r\n#fi\r\n\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n## download the default server settings file\r\n\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/goover\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "[STEAM] STEAM_APPID",
            "description": "Steam App ID",
            "env_variable": "STEAM_APPID",
            "default_value": "2857200",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "numeric",
                "in:2857200"
            ],
            "sort": 9
        },
        {
            "name": "[STEAM] Auto Update",
            "description": "Should Auto Update",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 3
        },
        {
            "name": "[SERVER] Server Name",
            "description": "Name of the server",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pelican Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:64"
            ],
            "sort": 1
        },
        {
            "name": "[STEAM] WINDOWS_INSTALL",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "boolean",
                "in:1"
            ],
            "sort": 6
        },
        {
            "name": "[SERVER] Server Password",
            "description": "Server access password",
            "env_variable": "SERVER_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:30"
            ],
            "sort": 2
        },
        {
            "name": "[SERVER] Query Port",
            "description": "Steam query port",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "numeric"
            ],
            "sort": 5
        },
        {
            "name": "[SERVER] Number of Players",
            "description": "Number of allowed player connections",
            "env_variable": "NUM_PLAYERS",
            "default_value": "6",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "numeric",
                "between:1,32"
            ],
            "sort": 4
        },
        {
            "name": "[WINE] WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "vcrun2022 mono",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string"
            ],
            "sort": 8
        },
        {
            "name": "[WINE] WINEDEBUG",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string"
            ],
            "sort": 7
        }
    ]
}