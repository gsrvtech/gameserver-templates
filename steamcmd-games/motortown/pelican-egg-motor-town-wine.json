{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": "https:\/\/raw.githubusercontent.com\/gsrvtech\/gameserver-templates\/refs\/heads\/main\/steamcmd-games\/motortown\/pelican-egg-motor-town-wine.json"
    },
    "exported_at": "2025-01-24T10:14:43+00:00",
    "name": "MotorTown - Wine",
    "author": "eggs@goover.dev",
    "uuid": "01c39322-5bc9-4091-8d29-e9bfe78b0d71",
    "description": "Enjoy realistic driving in the open world. Relaxing cargo deliveries or driving buses and taxis will give you enough money to buy new cars and parts. You can test your driving skills at the race track. It's all about pure driving pleasure!",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/goover\/wine:staging": "ghcr.io\/goover\/wine:staging"
    },
    "file_denylist": [],
    "startup": "xvfb-run wine .\/MotorTown\/Binaries\/Win64\/MotorTownServer-Win64-Shipping.exe Jeju_World?listen?- server -log -useperfthreads -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}}",
    "config": {
        "files": "{\r\n    \"DedicatedServerConfig.json\": {\r\n        \"parser\": \"json\",\r\n        \"find\": {\r\n            \"ServerName\": \"{{env.SRV_NAME}}\",\r\n            \"Password\": \"{{env.SRV_PW}}\",\r\n            \"MaxPlayers\": \"{{env.MAX_PLAYERS}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"xvfb-run wine\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# THIS EGG IS LICENCED UNDER AGPLv3\r\n#\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Motortown Installscript${NC}\"\r\necho -e \"${YELLOW}Egg by gOOvER (https:\/\/discord.goover.dev) | License: AGPLv3${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n# Setup Envs\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## check is steamuser is set\r\nif [ \"${STEAM_USER}\" == \"\" ]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nfi\r\n\r\n## if steam_user is set, use DepotDownloader, if its anonymous, use steamcmd\r\n#if [ \"${STEAM_USER}\" == \"anonymous\" ]; then\r\n    ## download and install steamcmd\r\n    cd \/tmp\r\n    mkdir -p \/mnt\/server\/steamcmd\r\n    curl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\n    tar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\n    mkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\n    cd \/mnt\/server\/steamcmd\r\n\r\n    ## install game using steamcmd\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}install game using steamcmd. please wait...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n    .\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) $( [[ \"${STEAM_SDK}\" == \"1\" ]] && printf %s '+app_update 1007' ) +app_update ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-beta ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-betapassword ${STEAM_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit\r\n    echo -e \"${GREEN}..done..${NC}\"\r\n\r\n    ## set up 32 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk32\r\n    cp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n    ## set up 64 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk64\r\n    cp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n#else\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#    echo -e \"${YELLOW}download and install DepotDownloader. please wait...${NC}\"\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#    ## download DepotDownloader\r\n#    cd $HOME\r\n#    curl -sLOJ $(curl -s https:\/\/api.github.com\/repos\/SteamRE\/DepotDownloader\/releases\/latest | grep browser_download_url | cut -d\\\" -f4 | egrep linux-x64.zip)\r\n#    unzip -o DepotDownloader-linux-x64.zip -d \/mnt\/server\r\n#    chmod +x \/mnt\/server\/DepotDownloader\r\n#    rm -f \/mnt\/server\/DepotDownloader-linux-x64.zip\r\n#   echo -e \"${GREEN}..done..${NC}\"\r\n\r\n    ## install game using DepotDownloader\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#    echo -e \"${YELLOW}downloading game using DepotDownloader. please wait...${NC}\"\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n#    .\/DepotDownloader -dir \/mnt\/server $( [[ -z ${STEAM_USER} ]] || printf %s \"-username ${STEAM_USER} -password ${STEAM_PASS} -remember-password\" ) $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '-os windows' ) -app ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-branch ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-branchpassword ${STEAM_BETAPASS}\" ) -validate\r\n#    echo -e \"${GREEN}..done..${NC}\"\r\n#    mkdir -p \/mnt\/server\/.steam\/sdk64\r\n#    .\/DepotDownloader -dir \/mnt\/server\/.steam\/sdk64 $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '-os windows' ) -app 1007\r\n#    chmod +x $HOME\/*\r\n\r\n#    ## install game using DepotDownloader\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n#    echo -e \"${YELLOW}installing new server. please wait...${NC}\"\r\n#    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n#fi\r\n\r\n## add below your custom commands if needed\r\n\r\nFILE=\"$HOME\/DedicatedServerConfig.json\"\r\nif [ -f \"$FILE\" ]; then\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${GREEN} $FILE found.${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nelse  \r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${RED} $FILE not found. copy default...${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  cd $HOME\r\n  mkdir -p \/home\/container\/Saved\/SaveGames\/\r\n  cp $HOME\/DedicatedServerConfig_Sample.json $HOME\/DedicatedServerConfig.json \r\n  echo -e \"${GREEN}..done..${NC}\"\r\nfi\r\n\r\n# copy libs\r\ncp -v $HOME\/steamclient.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\ncp -v $HOME\/steamclient64.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\ncp -v $HOME\/tier0_s.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\ncp -v $HOME\/tier0_s64.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\ncp -v $HOME\/vstdlib_s.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\ncp -v $HOME\/vstdlib_s64.dll $HOME\/MotorTown\/Binaries\/Win64\/\r\n\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"",
            "container": "ghcr.io\/goover\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "[SERVER] SteamAPPID",
            "description": "Do not edit!",
            "env_variable": "STEAM_APPID",
            "default_value": "2223650",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string"
            ],
            "sort": 13
        },
        {
            "name": "[SERVER] Max Players",
            "description": "",
            "env_variable": "MAX_PLAYERS",
            "default_value": "10",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "numeric"
            ],
            "sort": 4
        },
        {
            "name": "[SERVER] Server Name",
            "description": "",
            "env_variable": "SRV_NAME",
            "default_value": "egg by discord.goover.dev",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:128"
            ],
            "sort": 3
        },
        {
            "name": "[SERVER] Server Password",
            "description": "If specified, players must provide this password to join the server.",
            "env_variable": "SRV_PW",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "alpha_dash",
                "between:1,30"
            ],
            "sort": 6
        },
        {
            "name": "[STEAM] Steam Username",
            "description": "Steam account username to download the dedicated server.",
            "env_variable": "STEAM_USER",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 1
        },
        {
            "name": "[STEAM] Steam Password",
            "description": "Steam account password.",
            "env_variable": "STEAM_PASS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 2
        },
        {
            "name": "[STEAM] WINDOWS_INSTALL",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "in:1"
            ],
            "sort": 14
        },
        {
            "name": "[WINE] WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 11
        },
        {
            "name": "[WINE] WINEDEBUG",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 12
        },
        {
            "name": "[SERVER] Query Port",
            "description": "",
            "env_variable": "QUERY_PORT",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "integer",
                "between:1024,65536"
            ],
            "sort": 5
        },
        {
            "name": "[STEAM] Steam Branch",
            "description": "",
            "env_variable": "STEAM_BETAID",
            "default_value": "test",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 8
        },
        {
            "name": "[STEAM] Steam Beta Password",
            "description": "",
            "env_variable": "STEAM_BETAPASS",
            "default_value": "motortowndedi",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string"
            ],
            "sort": 9
        },
        {
            "name": "[WINE] XVFB",
            "description": "",
            "env_variable": "XVFB",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 10
        },
        {
            "name": "[SERVER] Auto update the server",
            "description": "",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 7
        }
    ]
}