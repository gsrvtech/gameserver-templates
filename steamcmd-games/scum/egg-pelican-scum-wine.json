{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": null
    },
    "exported_at": "2025-08-03T09:40:58+00:00",
    "name": "Scum Wine",
    "author": "eggs@goover.de",
    "uuid": "52d86f8b-0878-4568-85dd-e24ab71748a1",
    "description": null,
    "tags": [],
    "features": [],
    "docker_images": {
        "ghcr.io\/goover\/wine:staging": "ghcr.io\/goover\/wine:staging",
        "ghcr.io\/goover\/wine:stable": "ghcr.io\/goover\/wine:stable"
    },
    "file_denylist": [],
    "startup": "wine .\/SCUM\/Binaries\/Win64\/SCUMServer.exe -log -port={{SERVER_PORT}} -MaxPlayers={{MAX_PLAYERS}} & SCUM_PID=$! ; tail -c0 -F .\/SCUM\/Saved\/Logs\/SCUM.log --pid=$SCUM_PID",
    "config": {
        "files": "{\n    \"SCUM\/Saved\/Config\/WindowsServer\/ServerSettings.ini\": {\n        \"parser\": \"file\",\n        \"find\": {\n            \"scum.ServerName=\": \"scum.ServerName={{env.SRV_NAME}}\",\n            \"scum.ServerDescription=\": \"scum.ServerDescription={{env.SRV_DES}}\",\n            \"scum.ServerPassword=\": \"scum.ServerPassword={{env.SRV_PW}}\",\n            \"scum.ServerPlaystyle=\": \"scum.ServerPlaystyle={{env.SRV_PLAYSTYLE}}\"\n        }\n    }\n}",
        "startup": "{\n    \"done\": \"Config entry: GameID scum\"\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# THIS EGG IS LICENCED UNDER AGPLv3\r\n#\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}SCUM Installscript${NC}\"\r\necho -e \"${YELLOW}Egg by gOOvER (https:\/\/discord.goover.dev) | License: AGPLv3${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n# Setup Envs\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## check is steamuser is set\r\nif [ \"${STEAM_USER}\" == \"\" ]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nfi\r\n\r\n## if steam_user is set, use DepotDownloader, if its anonymous, use steamcmd\r\n#if [ \"${STEAM_USER}\" == \"anonymous\" ]; then\r\n    ## download and install steamcmd\r\n    cd \/tmp\r\n    mkdir -p \/mnt\/server\/steamcmd\r\n    curl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\n    tar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\n    mkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\n    cd \/mnt\/server\/steamcmd\r\n\r\n    ## install game using steamcmd\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}install game using steamcmd. please wait...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n    .\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) $( [[ \"${STEAM_SDK}\" == \"1\" ]] && printf %s '+app_update 1007' ) +app_update ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-beta ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-betapassword ${STEAM_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit\r\n    echo -e \"${GREEN}..done..${NC}\"\r\n\r\n    ## set up 32 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk32\r\n    cp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n    ## set up 64 bit libraries\r\n    mkdir -p \/mnt\/server\/.steam\/sdk64\r\n    cp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\nFILE=\"$HOME\/SCUM\/Saved\/Config\/WindowsServer\/ServerSettings.ini\"\r\nif [ -f \"$FILE\" ]; then\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${GREEN} $FILE found.${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nelse  \r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${RED} $FILE not found. copy default...${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  cd $HOME\r\n  mkdir -p $HOME\/SCUM\/Saved\/Config\/WindowsServer\/\r\n  curl -sSL -o \"ServerSettings.ini\" https:\/\/raw.githubusercontent.com\/gsrvtech\/gameserver-templates\/refs\/heads\/main\/steamcmd-games\/scum\/config\/ServerSettings.ini \r\n  echo -e \"${GREEN}..done..${NC}\"\r\nfi\r\n\r\n## Proton fix for Version 9.27 and above\r\nDIR=\"$HOME\/.config\/protonfixes\"\r\nif [ ! -d \"$DIR\" ]; then\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${RED} The directory $DIR does not exist. Creating it now...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    mkdir -p \"$DIR\"\r\nelse\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${GREEN} The directory $DIR already exists.${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nfi\r\n\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"",
            "container": "ghcr.io\/goover\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "[SERVER] Max Players",
            "description": "",
            "env_variable": "MAX_PLAYERS",
            "default_value": "64",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "numeric"
            ],
            "sort": 2
        },
        {
            "name": "[SERVER] Server Description ",
            "description": "",
            "env_variable": "SRV_DES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 3
        },
        {
            "name": "[SERVER] Server Name",
            "description": "",
            "env_variable": "SRV_NAME",
            "default_value": "SCUM dedicated Server hosted by pelican.dev",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 1
        },
        {
            "name": "[SERVER]PlayStyle PVE or PVP",
            "description": "",
            "env_variable": "SRV_PLAYSTYLE",
            "default_value": "PVE",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "in:PVE,PVP"
            ],
            "sort": 4
        },
        {
            "name": "[SERVER]Server Password",
            "description": "",
            "env_variable": "SRV_PW",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 5
        },
        {
            "name": "[STEAM] Steamappid",
            "description": "",
            "env_variable": "STEAM_APPID",
            "default_value": "3792580",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "in:3792580"
            ],
            "sort": 7
        },
        {
            "name": "[STEAM] WINDOWS_INSTALL",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 6
        },
        {
            "name": "[WINE] WINEDEBUG",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": [],
            "sort": 8
        },
        {
            "name": "[WINE] WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "win11 vcrun2022",
            "user_viewable": false,
            "user_editable": false,
            "rules": [],
            "sort": 9
        }
    ]
}